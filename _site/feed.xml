<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Your awesome title</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</description>
    <link>http://pmoskovi.github.io/kaazing-developer-network/</link>
    <atom:link href="http://pmoskovi.github.io/kaazing-developer-network/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 26 Aug 2014 14:16:20 -0600</pubDate>
    <lastBuildDate>Tue, 26 Aug 2014 14:16:20 -0600</lastBuildDate>
    <generator>Jekyll v2.3.0</generator>
    
      <item>
        <title>Amazon EC2</title>
        <description>&lt;h1 id=&quot;amazon-ec2-guide&quot;&gt;Amazon EC2 Guide&lt;/h1&gt;

&lt;p&gt;Kaazing provides you the flexibility to deploy in whatever configuration you may have. There is a free developer edition to help you get started with no installation or configuration. Kaazing Gateway is available to download and install it on your local system, or behind your firewall. And you can even deploy your own instance to Amazon EC2. This guide will get you setup on Amazon EC2.&lt;/p&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;While we have tried to assume nearly no experience with Amazon Web Services (AWS) throughout this guide, an Amazon account is required. This can be the one you use to shop at home, an account related to your employer, or one you create specifically for this guide.&lt;/p&gt;

&lt;p&gt;There are points during this guide that requires using the command-line interface on your system. The commands will be explained, but some prior experience will assist you in completing these tasks in a confident manner.&lt;/p&gt;

&lt;p&gt;Finally, while I assume no experience with WebSocket, readers of this tutorial should feel comfortable with the web standards stack. This includes not only HTML and CSS, but also JavaScript. No framework dependency is used in this tutorial.&lt;/p&gt;

&lt;h2 id=&quot;amazon-web-services-marketplace&quot;&gt;Amazon Web Services Marketplace&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://aws.amazon.com/marketplace&quot;&gt;AWS Marketplace&lt;/a&gt;, not to be confused with Amazon Marketplace, provides all fashion of pre-built server configurations for you to use. This means you do not have to be an expert in configuring EC2 instances, and it also means that you do not have to be an expert in managing the software you want to run. For mere cents on the dollar, and with a few clicks of your mouse, you can explore an almost exhaustive world of server software. And in the end, if you do not like what you have found, simply terminate the instance, and move on, no worse for the wear.&lt;/p&gt;

&lt;blockquote&gt;

  &lt;p&gt;If you are familiar with managing Amazon Web Services (AWS) infrastructure, have a key pair that you prefer to use, and understand managing security groups, then you can jump to the section entitled “Creating an Instance”.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;generating-a-key-pair&quot;&gt;Generating a Key Pair&lt;/h3&gt;

&lt;p&gt;When it comes to managing Amazon Web Services (AWS) resources, especially Amazon Marketplace instances, a “key pair” is probably the single most important step to get right. A key pair is a file that will be generated by Amazon, and that you will download to your system. It is this key that effectively replaces password-based access to AWS resources. It authenticates you against the resources you create in the AWS cloud. You will want to back it up and keep it safe. Without your key pair, you can no longer access your instances.&lt;/p&gt;

&lt;p&gt;Sound serious enough? Good, let us move on to creating this important file.&lt;/p&gt;

&lt;p&gt;AWS resources are managed through the &lt;a href=&quot;https://console.aws.amazon.com/ec2&quot;&gt;AWS Management Console&lt;/a&gt;. You will need to log into your account at this point to access the Management Console specific to any resources you create, or have created in the past. If you are using the link above, you will be taken directly to the EC2 Dashboard. If you have not used the above link, you will need to navigate to the EC2 dashboard first.&lt;/p&gt;

&lt;p&gt;On the left side of the EC2 Dashboard is a list of areas that you can choose to administer. Find the grouping labeled “Network &amp;amp; Security” and then click on the link for “Key Pairs” under that heading. This will take you to a page with a single big, blue, button labeled “Create Key Pair”. When you click on the button labeled “Create Key Pair” you will be presented with a simple dialog to name this key pair. Name this key pair “kaazing-key-pair” so the resources it can be used with is clear for future reference.&lt;/p&gt;

&lt;p&gt;Once you have typed in a name for this key pair, click the button labeled “Create”. The dialog will disappear, and the download of a file with the extension “pem” or “cer” will begin. This is your key pair. Back it up now. You will be using this key pair later, so place it in a location on your machine that you can easily access later. I keep my key pairs in the user home directory on my machine. This makes for easy access from the command line when needed.&lt;/p&gt;

&lt;h3 id=&quot;creating-a-security-group&quot;&gt;Creating a Security Group&lt;/h3&gt;

&lt;p&gt;Amazon Web Services (AWS) tends to take security pretty seriously, which is great. It does however mean that we need to do a little more leg work before we can go spinning up instances ad hoc. The key pair that we just created is one example of that. Another example is “Security Groups”. In the AWS vocabulary, a “Security Group” defines a firewall that controls traffic going into your new instance.&lt;/p&gt;

&lt;p&gt;To setup a security group for this instance, head back to the &lt;a href=&quot;https://console.aws.amazon.com/ec2&quot;&gt;AWS Management Console&lt;/a&gt;.  on the left side of the page, you will find a grouping of items labeled “Network &amp;amp; Security”.  This is the same heading where you found the “Key Pairs” menu item earlier.  This time click on the link labeled “Security Groups”.  Depending on what type of work you have done with AWS in the past, you may have some security groups available, or none at all.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://static.kevinhoyt.com/devrel/images/image11.png&quot; alt=&quot;Create an AWS Security Group&quot; /&gt;
&lt;img src=&quot;http://static.kevinhoyt.com/devrel/images/image03.png&quot; alt=&quot;Edit the Security Group Details&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Let us create a security group for this tutorial by clicking on the blue button labeled “Create Security Group”. You will be presented with a dialog to complete.  For “Security group name” enter “kaazing-security-group”. Prefixing these entries with “kaazing” will help us to associate resources as our own personal cloud grows. Enter a “Description” that makes sense for you, and leave the “VPC” field set to “No VPC”.&lt;/p&gt;

&lt;p&gt;We will want two (2) security group rules for our Kaazing WebSocket Gateway instance. Click the “Add Rule” button to insert a new rule. In the “Type” column, select the “SSH” option. Secure Shell (SSH) is how we will access the operating system (OS) of our instance in the future. Under the “Source” column, make sure that “Anywhere” is selected. This will allow you to access the OS of your instance from any IP address. If you know what IP address you will be using to administer your instance, then you can alternatively provide those details.&lt;/p&gt;

&lt;p&gt;The “Port Range” value of 22, the SSH default port, will be populated for you. You do not need to change this setting.&lt;/p&gt;

&lt;p&gt;Kaazing WebSocket Gateway software will start when you start the instance for the first time. It will listen on ports 8000 and 8001 for incoming traffic. We need to tell the security group that we want these ports to be open as well. Click on the button labeled “Add Rule” again to insert another row. For “Type” leave “Custom TCP Rule”. For “Port Range” enter the value “8000-8001”. And again, make sure that the “Source” column is set to “Anywhere”. This time that “Anywhere” allows us to access the instance from any web browser.&lt;/p&gt;

&lt;blockquote&gt;

  &lt;p&gt;If in the future you want to run a web server or other software on this instance, you can modify this security group from the AWS Management Console.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;creating-an-instance&quot;&gt;Creating an Instance&lt;/h3&gt;

&lt;p&gt;If you head on over to the &lt;a href=&quot;https://aws.amazon.com/marketplace&quot;&gt;AWS Marketplace&lt;/a&gt; web site, you will find a search bar at the top of the page. In this case, we want to get started with WebSocket to enable our real-time web applications, so we will enter “Kaazing” as the search term, and click the “Go” button. You will get only one search result labeled “Kaazing WebSocket Gateway - JMS Edition”. JMS stands for Java Message Service. At a high level, this means that if you have a technology in your infrastructure that can communicate with JMS (and many do), then you can easily extend Kaazing WebSocket Gateway to communicate with that other software. For the purposes of getting started however, this is an implementation detail that we can come back to later.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://static.kevinhoyt.com/devrel/images/image02.png&quot; alt=&quot;The AWS Marketplace&quot; /&gt;
&lt;img src=&quot;http://static.kevinhoyt.com/devrel/images/image00.png&quot; alt=&quot;Kaazing Gateway on AWS Marketplace&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you click on the orange, rectangular Kaazing logo in that single search result, you will be taken to a page that gives you all the details of the AWS Marketplace instance. You can see that it will run on Ubuntu 12.04 using a 64-bit Amazon Machine Image (AMI). You can also see pricing for both the software and the EC2 instance. A “Standard Micro” instance will be more than adequate to get going, will cost nothing for Kaazing WebSocket Gateway software, and a mere $0.20 per hour for the EC2 instance - or potentially $0.00 if you qualify for the AWS Free Tier.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://static.kevinhoyt.com/devrel/images/image07.png&quot; alt=&quot;Kaazing Gateway instance details&quot; /&gt;
&lt;img src=&quot;http://static.kevinhoyt.com/devrel/images/image10.png&quot; alt=&quot;Kaazing Gateway pre-launch&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Clicking on the orange button labeled “Continue” will take you to a page that lets you fine tune your options before launching the actual instance. The default EC2 Instance Type is “Standard Large”. If you are just getting started with WebSocket and simply want to explore what Kaazing WebSocket Gateway has to offer, then you might select a “Standard Micro” instance. At the time of this writing a Standard Micro instance will run $0.02 per hour, or about $14.40 per month. Other cloud-based solutions with WebSocket built-in will cost more and introduce artificial limitations.&lt;/p&gt;

&lt;p&gt;Earlier in this tutorial we created a “Security Group” that defines a firewall and controls traffic going into your new instance. We named that security group “kaazing-security-group” and opened the appropriate ports needed to use Kaazing WebSocket Gateway. Scroll down the configuration page, and make sure that the security group you created earlier is the one selected from the available options. Once you have selected the option, you will see the description and port ranges listed for verification.&lt;/p&gt;

&lt;p&gt;The last setting, and perhaps the most important, is the “Key Pair” section of the configuration page.  Rather than deal in passwords, AWS ties EC2 instances to “Key Pairs” to ensure that nobody else can access your software. We created a key pair earlier in this tutorial. Scroll down to the “Key Pair” section of the configuration, and expand it if necessary. Select the key pair you created earlier from the provided options.&lt;/p&gt;

&lt;blockquote&gt;

  &lt;p&gt;I am assuming that you are following the naming instructions used in this tutorial. You can certainly use a different key pair and/or security group if you are familiar with managing AWS infrastructure. Please make sure the security group you use has a rule for the “8000-8001” range.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now we are ready to get this party started! Click on the orange button labeled “Launch with 1-Click” to start your instance. You will be presented with a message that gives you some usage instructions, and software installation details. If you feel comfortable with the AWS Management Console, then you can close this dialog and head back to the EC2 Dashboard. Alternatively, you can click the link labeled “AWS Management Console”. Starting the instance for the first time can take a few minutes. Go grab yourself a congratulatory coffee!&lt;/p&gt;

&lt;h3 id=&quot;accessing-your-instance&quot;&gt;Accessing Your Instance&lt;/h3&gt;

&lt;p&gt;How was that coffee? All good? Great, let us continue by accessing our very own Kaazing WebSocket Gateway instance. Once your shiny new instance is started, the Kaazing WebSocket Gateway software is also started. There are even demonstration examples included for you to get familiar with using WebSocket. There is just one problem at this point - we do not know the URL to use to access our Kaazing WebSocket Gateway instance.&lt;/p&gt;

&lt;p&gt;To get this information head over the &lt;a href=&quot;https://console.aws.amazon.com/ec2&quot;&gt;AWS Management Console&lt;/a&gt; once again. In the center section of the page, you will see a heading titled “Resources”. Under this heading you will find various pieces of information about your EC2 instance(s). Click on the first piece of information labeled “Running Instances”. The number in front of that label may differ depending on your AWS usage prior to starting this tutorial.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://static.kevinhoyt.com/devrel/images/image01.png&quot; alt=&quot;Ready to launch your Kaazing Gateway instance.&quot; /&gt;
&lt;img src=&quot;http://static.kevinhoyt.com/devrel/images/image09.png&quot; alt=&quot;Running instance listing&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you have used EC2 (or related) AWS features before, then you may have a list of instances presented to you. There will be no name associated with this newly created instance. You can move your mouse over the empty name field, and a pencil icon will appear. You can click on that pencil to edit the name of your newly created Kaazing WebSocket Gateway instance. Let us name it “kaazing-gateway”.&lt;/p&gt;

&lt;p&gt;Once you have named the instance, the row should automatically be selected for you. If it is not, select the row for the “kaazing-gateway” instance. In the bottom half of the page, you will get a variety of pieces of information about the instance. For our purposes at this point, we simply want the value for the field labeled “Public DNS”. This usually starts with “ec2-“.&lt;/p&gt;

&lt;p&gt;Copy the “Public DNS” value, and paste it into the address bar in your browser. Append the value “8001” to the URL. This is one of the ports we opened earlier when we configured the security group. This is also the port where the provided examples can be located. Hit “Enter” on your keyboard to load the designated page. Congratulations, you are now running your own real-time cloud!&lt;/p&gt;

&lt;h2 id=&quot;websocket-in-action&quot;&gt;WebSocket in Action&lt;/h2&gt;

&lt;p&gt;Do not believe me that you are up and running? Do you see that first big blue box labeled “Demos”? Let us check things out by clicking there (it will turn orange when your mouse rolls over it). This will present you with a list of demonstrations to check out. The “JavaScript JMS Demo” is great if you are looking for more specific compatibility with JMS. For now though, click on the link below that labeled “JavaScript Stock Demo”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://static.kevinhoyt.com/devrel/images/image05.png&quot; alt=&quot;Kaazing Gateway demonstrations on your new instance.&quot; /&gt;
&lt;img src=&quot;http://static.kevinhoyt.com/devrel/images/image08.png&quot; alt=&quot;Simulated stock market data feed.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once the demonstration has loaded, you will find three (3) fields to populate. The first one is location, and is populated for you with the URL for your Kaazing WebSocket Gateway instance. Note the trailing “jms” on the URL. This is a specific endpoint configured on the server itself. We will take a look at this in the next installment of this tutorial.&lt;/p&gt;

&lt;p&gt;The “User Name” and “Password” fields can be left blank for the purposes of seeing the demonstration in action. Click the button labeled “Connect” and the area below the orange line should start populating with various companies and pretend stock data. You will see the data change value and color rapidly - far more rapidly than could be accomplished via a request/response approach. That is the beauty of WebSocket!&lt;/p&gt;

&lt;p&gt;When the “Connect” button was clicked, the browser opened a WebSocket connection back to the server. It then has left that connection open. It is fully bi-directional at all times, and blazing fast. Meanwhile, a service on the server is generating the random stock values and sending them to the client. The client receives the values in an event-driven manner, and updates the DOM using JavaScript.&lt;/p&gt;

&lt;blockquote&gt;

  &lt;p&gt;This will even work on your tablet or smartphone. Even old ones that do not support WebSocket. That is the awesomeness that is Kaazing WebSocket Gateway.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;

&lt;p&gt;Running your own real-time cloud from the AWS Marketplace may seem intimidating at first. By understanding the terms used, and what they do, we can quickly start up a new instance of Kaazing WebSocket Gateway, and access the provided demonstrations. From here you may want to build your own WebSocket example, and further configure your instance. You can find out more information about doing exactly that in our other guides.&lt;/p&gt;

</description>
        <pubDate>Tue, 26 Aug 2014 09:42:00 -0600</pubDate>
        <link>http://pmoskovi.github.io/kaazing-developer-network/getting/started/amazon/ec2/2014/08/26/amazon-ec2/</link>
        <guid isPermaLink="true">http://pmoskovi.github.io/kaazing-developer-network/getting/started/amazon/ec2/2014/08/26/amazon-ec2/</guid>
        
        
        <category>getting</category>
        
        <category>started</category>
        
        <category>amazon</category>
        
        <category>ec2</category>
        
      </item>
    
      <item>
        <title>Greetings, Peter!</title>
        <description>&lt;p&gt;I can do this, too!&lt;/p&gt;

</description>
        <pubDate>Fri, 22 Aug 2014 14:08:00 -0600</pubDate>
        <link>http://pmoskovi.github.io/kaazing-developer-network/jekyll/update/javascript/2014/08/22/hello-peter/</link>
        <guid isPermaLink="true">http://pmoskovi.github.io/kaazing-developer-network/jekyll/update/javascript/2014/08/22/hello-peter/</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>JMS Demo</title>
        <description>&lt;p&gt;Real-Time Interactions with Physical Objects Over the Web&lt;/p&gt;

&lt;p&gt;Control a truck remotely using your smartphone from continents away. The real time connectivity is established using Raspberry Pi, a credit card sized computer. All you need is a mobile Web browser.&lt;/p&gt;
</description>
        <pubDate>Fri, 22 Aug 2014 10:15:00 -0600</pubDate>
        <link>http://pmoskovi.github.io/kaazing-developer-network/java/javascript/demo/ugly/2014/08/22/JMS/</link>
        <guid isPermaLink="true">http://pmoskovi.github.io/kaazing-developer-network/java/javascript/demo/ugly/2014/08/22/JMS/</guid>
        
        
        <category>java</category>
        
        <category>javascript</category>
        
        <category>demo</category>
        
        <category>ugly</category>
        
      </item>
    
      <item>
        <title>Everything about JAVA</title>
        <description>&lt;p&gt;And here’s everything you ever wanted to know about Java.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt; * The HelloWorldApp class implements an application that&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt; * simply displays &amp;quot;Hello World!&amp;quot; to the standard output.&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt; */&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloWorldApp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;6&lt;/span&gt;     &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;7&lt;/span&gt;         &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Hello World!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//Display the string.&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;8&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</description>
        <pubDate>Thu, 21 Aug 2014 10:15:00 -0600</pubDate>
        <link>http://pmoskovi.github.io/kaazing-developer-network/java/javascript/demo/2014/08/21/java/</link>
        <guid isPermaLink="true">http://pmoskovi.github.io/kaazing-developer-network/java/javascript/demo/2014/08/21/java/</guid>
        
        
        <category>java</category>
        
        <category>javascript</category>
        
        <category>demo</category>
        
      </item>
    
      <item>
        <title>Greetings, Kevin!</title>
        <description>&lt;p&gt;Hey Kevin,&lt;/p&gt;

&lt;p&gt;This one is for you - hope you find it useful!&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/*!&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; * GMaps.js v0.2.30&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; * http://hpneo.github.com/gmaps/&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; * Copyright 2012, Gustavo Leon&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; * Released under the MIT License.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; */&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;google&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;google&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;maps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;GMaps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;use strict&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;doc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ele&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;jQuery&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;ele&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;ele&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ele&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Enjoy the rest of your day!&lt;/p&gt;

</description>
        <pubDate>Mon, 18 Aug 2014 16:31:00 -0600</pubDate>
        <link>http://pmoskovi.github.io/kaazing-developer-network/jekyll/update/javascript/2014/08/18/hello-kevin/</link>
        <guid isPermaLink="true">http://pmoskovi.github.io/kaazing-developer-network/jekyll/update/javascript/2014/08/18/hello-kevin/</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>Greetings, Jonas!</title>
        <description>&lt;p&gt;Hey Jonas,&lt;/p&gt;

&lt;p&gt;This thing rocks…&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/*!&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; * GMaps.js v0.2.30&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; * http://hpneo.github.com/gmaps/&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; * Copyright 2012, Gustavo Leon&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; * Released under the MIT License.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; */&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;google&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;google&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;maps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;GMaps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;use strict&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;doc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ele&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;jQuery&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;ele&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;ele&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ele&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Enjoy the rest of your day!&lt;/p&gt;

</description>
        <pubDate>Mon, 18 Aug 2014 16:31:00 -0600</pubDate>
        <link>http://pmoskovi.github.io/kaazing-developer-network/jekyll/update/javascript/2014/08/18/hello-jonas/</link>
        <guid isPermaLink="true">http://pmoskovi.github.io/kaazing-developer-network/jekyll/update/javascript/2014/08/18/hello-jonas/</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>Welcome Vanessa - this is Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory - edit this post and re-build (or run with the &lt;code&gt;-w&lt;/code&gt; switch) to see your changes!
To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention: YYYY-MM-DD-name-of-post.ext.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Thu, 14 Aug 2014 16:21:30 -0600</pubDate>
        <link>http://pmoskovi.github.io/kaazing-developer-network/jekyll/update/2014/08/14/welcome-to-jekyll/</link>
        <guid isPermaLink="true">http://pmoskovi.github.io/kaazing-developer-network/jekyll/update/2014/08/14/welcome-to-jekyll/</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
